no.root.found=Can''t find root file {0}.
cant.find.template=Can''t find template {0}.
cant.apply.template=Can''t apply template {0}.
wrong.element.type={0} should be {1}, got {2} instead.
wrong.element.list.type={0} should be a list of {1}s, but it also got {2} instead.
element.name.pot=Pot.yaml
element.name.apply=Apply block
element.name.template.path=Template path
element.name.product.type=Product type
element.name.platforms.list=Platforms list
element.name.aliases=Aliases
element.name.alias.platforms=Alias platforms
element.name.variants.list=Variants list
cant.merge.templates=Error while applying template ''{0}'':\n\
  Values under path ''{1}'' have different types.\n\
  Type in Pot: {2}.\n\
  Type in template: {3}.\n\
  Template path: {4}.
product.field.is.missing=Each Pot should have a 'product' field.
wrong.product.field.format=Product field got a wrong format: {0}.\
  \nIt should either be a product type of platforms or an object with the following fields:\
  \nproduct:\
  \n  type: '{'Product type'}'\
  \n  platforms: '{'Platform list'}'\
  \nwhere ''Product type'' is one of {1} and ''Platform list'' is a list of platforms supported by given product type.
wrong.product.type=Unsupported product type: {0}.\
  \nIt should be one of {1}.
product.platforms.should.not.be.empty=Product platforms list should not be empty.
product.unknown.platform=Unknown platform: {0}.
product.unsupported.platform=Product type {0} does not support platform: {1}.\
  \nOnly supported platforms are: {2}.
product.type.does.not.have.default.platforms=Product type {0} should have its platforms declared explicitly like that:\
  \nproduct:\
  \n  type: {0}\
  \n  platforms: [jvm, iosArm64]
incorrect.variants.format=Incorrect variants format.\
  \nIt should either be a list of strings, e.g.:\
  \n  variants: [debug, release]\
  \nOr a list of dimensions, e.g.:\
  \n  variants:\
  \n    - [debug, release]\
  \n    - [paid, free]
applied.to.file=Error context: when applying the template at {0}
