#@ gradle
[module]
id = "my-module"
group-id = "org.example"
version = "1.2.3"

# Here plugin can be just a templating surag around theese constructions, like:
# [sources]
# apply = "extension_based"
# or
# apply = "directory_based"
# or
# apply = "combined"
# or even simpler
# sources = "extension_based" - if we specify some value for table - then it is template applying.

[sources]
common = "src/"
ios = "src/**/*.ios.kt"
# or
# ios = iosSrc/*.kt
android = "src/**/*.android.kt"
ios_android = "src/**/*.ios_andoid.kt"
# "ios+android" = "src/**/*.ios_andoid.kt"
# ios = "src/**/*@ios.kt"

# Or sources like this:
[platform.ios]
sources = "iosSrc/**/*.kt"

# Or if we need some specific attributes:
[platform.ios.sources.integration-tests]
path = "iosIntegrationTests/*.kt"
[platform.ios.sources.integration-tests.dependencies]
"some.integration:lib" = "1.2.3"

# Or maybe if user need some specific source attributes -
# we eill force him to make a special module.