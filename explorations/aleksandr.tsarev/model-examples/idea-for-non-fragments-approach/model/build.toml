[target.android]
sources = [ "src/commonMain/**", "src/androidMain/**" ]
dependencies = [
    "libs.kotlinStdlibCommon",
    "androidx.annotation:annotation:1.1.0",
    "androidx.savedstate:savedstate:1.1.0",
    "androidx.lifecycle:lifecycle-runtime:2.3.0",
    "androidx.lifecycle:lifecycle-viewmodel:2.3.0",

    ":compose:animation:animation-core",
    ":compose:foundation:foundation",
    ":compose:material:material-icons-core",
    ":compose:material:material-ripple",
    ":compose:runtime:runtime",
    ":compose:ui:ui",
    ":compose:ui:ui-text",
    ":compose:animation:animation",
    ":compose:foundation:foundation-layout",
    ":compose:ui:ui-util",
]

[target.androidTest]
sources = [ "src/commonMain/**", "src/androidMain/**", "src/commonTest/**", "src/androidTest/**" ]
dependencies = [
    "libs.kotlinStdlibCommon",
    "androidx.annotation:annotation:1.1.0",
    "androidx.savedstate:savedstate:1.1.0",
    "androidx.lifecycle:lifecycle-runtime:2.3.0",
    "androidx.lifecycle:lifecycle-viewmodel:2.3.0",

    ":compose:animation:animation-core",
    ":compose:foundation:foundation",
    ":compose:material:material-icons-core",
    ":compose:material:material-ripple",
    ":compose:runtime:runtime",
    ":compose:ui:ui",
    ":compose:ui:ui-text",
    ":compose:animation:animation",
    ":compose:foundation:foundation-layout",
    ":compose:ui:ui-util",
]

[target.desktop]
sources = [ "src/commonMain/**", "src/androidMain/**" ]
dependencies = [
    "libs.kotlinStdlibCommon",

    ":compose:animation:animation-core",
    ":compose:foundation:foundation",
    ":compose:material:material-icons-core",
    ":compose:material:material-ripple",
    ":compose:runtime:runtime",
    ":compose:ui:ui",
    ":compose:ui:ui-text",
    ":compose:animation:animation",
    ":compose:foundation:foundation-layout",
    ":compose:ui:ui-util",
]

[target.desktopTest]
sources = [ "src/commonTest/**", "src/androidTest/**", "src/commonMain/**", "src/androidMain/**" ]
dependencies = [
    "libs.kotlinStdlibCommon",

    ":compose:animation:animation-core",
    ":compose:foundation:foundation",
    ":compose:material:material-icons-core",
    ":compose:material:material-ripple",
    ":compose:runtime:runtime",
    ":compose:ui:ui",
    ":compose:ui:ui-text",
    ":compose:animation:animation",
    ":compose:foundation:foundation-layout",
    ":compose:ui:ui-util",
]

[target.darwin]
sources = [ "src/commonMain/**", "src/androidMain/**" ]
dependencies = [
    "libs.kotlinStdlibCommon",

    ":compose:animation:animation-core",
    ":compose:foundation:foundation",
    ":compose:material:material-icons-core",
    ":compose:material:material-ripple",
    ":compose:runtime:runtime",
    ":compose:ui:ui",
    ":compose:ui:ui-text",
    ":compose:animation:animation",
    ":compose:foundation:foundation-layout",
    ":compose:ui:ui-util",
]

[target.js]
sources = [ "src/commonMain/**", "src/jsMain/**" ]
dependencies = [
    "libs.kotlinStdlibCommon",

    ":compose:animation:animation-core",
    ":compose:foundation:foundation",
    ":compose:material:material-icons-core",
    ":compose:material:material-ripple",
    ":compose:runtime:runtime",
    ":compose:ui:ui",
    ":compose:ui:ui-text",
    ":compose:animation:animation",
    ":compose:foundation:foundation-layout",
    ":compose:ui:ui-util",
]




kotlin {

/*
* When updating dependencies, make sure to make the an an analogous update in the
* corresponding block above
*/
sourceSets {

// TODO(b/214407011): These dependencies leak into instrumented tests as well. If you
//  need to add Robolectric (which must be kept out of androidAndroidTest), use a top
//  level dependencies block instead:
//  `dependencies { testImplementation(libs.robolectric) }`
androidTest.dependencies {
implementation(libs.testRules)
implementation(libs.testRunner)
implementation(libs.junit)
implementation(libs.truth)
}

androidAndroidTest.dependencies {
implementation(project(":compose:material:material:material-samples"))
implementation(project(":compose:test-utils"))
implementation(project(":test:screenshot:screenshot"))

implementation(libs.testRules)
implementation(libs.testRunner)
implementation(libs.junit)
implementation(libs.truth)
implementation(libs.dexmakerMockito)
implementation(libs.mockitoCore)
implementation(libs.mockitoKotlin)
implementation(libs.testUiautomator)
}

desktopTest.dependencies {
implementation(project(":compose:ui:ui-test-junit4"))
implementation(libs.truth)
implementation(libs.junit)
implementation(libs.skikoCurrentOs)
}
}
}
dependencies {
samples(project(":compose:material:material:material-samples"))
}