[versions]
compose = "1.6.10"
intellij-async-profiler = "3.0-1"
intellij-parsing = "0.3.154"
intellij-platform = "233.13763.11"
intellij-xcodemodel = "241.14980"
kotlin = "2.0.0"
ktor = "2.3.6"
opentelemetry = "1.32.0"
slf4j = "2.0.16"
tinylog = "2.6.2"

# Naming convention:
# https://blog.gradle.org/best-practices-naming-version-catalog-entries
[libraries]
compose-gradle-plugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
intellij-amper-xcodemodel = { module = "com.jetbrains.intellij.amper:amper-deps-proprietary-xcode-model-squashed", version.ref = "intellij-xcodemodel" }
intellij-deps-asyncProfiler = { module = "org.jetbrains.intellij.deps:async-profiler", version.ref = "intellij-async-profiler" }
intellij-parsing-core = { module = "org.jetbrains:ij-parsing-core", version.ref = "intellij-parsing" }
intellij-platform-core = { module = "com.jetbrains.intellij.platform:core", version.ref = "intellij-platform" }
intellij-platform-coreImpl = { module = "com.jetbrains.intellij.platform:core-impl", version.ref = "intellij-platform" }
intellij-platform-ideCore = { module = "com.jetbrains.intellij.platform:ide-core", version.ref = "intellij-platform" }
intellij-platform-util = { module = "com.jetbrains.intellij.platform:util", version.ref = "intellij-platform" }
intellij-platform-utilEx = { module = "com.jetbrains.intellij.platform:util-ex", version.ref = "intellij-platform" }
intellij-platform-utilJdom = { module = "com.jetbrains.intellij.platform:util-jdom", version.ref = "intellij-platform" }
kotlin-buildToolsApi = { module = "org.jetbrains.kotlin:kotlin-build-tools-api", version.ref = "kotlin"}
kotlin-compose-compiler-gradle-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin"}
kotlin-serialization-plugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin"}
ktor-client = { module = "io.ktor:ktor-client", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "opentelemetry" }
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "opentelemetry" }
opentelemetry-sdkTrace = { module = "io.opentelemetry:opentelemetry-sdk-trace", version.ref = "opentelemetry" }
opentelemetry-kotlin = { module = "io.opentelemetry:opentelemetry-extension-kotlin", version.ref = "opentelemetry" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
tinylog-api = { module = "org.tinylog:tinylog-api-kotlin", version.ref = "tinylog" }
tinylog-impl = { module = "org.tinylog:tinylog-impl", version.ref = "tinylog" }
tinylog-jul = { module = "org.tinylog:jul-tinylog", version.ref = "tinylog" }
tinylog-slf4j = { module = "org.tinylog:slf4j-tinylog", version.ref = "tinylog" }
