[versions]
# The version of AGP used in Amper to delegate Android builds to Gradle
agp = "8.10.1"
android-tools = "31.10.0"
apache-commons = "1.27.1"
bouncycastle = "1.78.1"
clikt = "5.0.3"
eclipse-jgit = "7.2.1.202505142326-r"
google-services = "4.4.2"
gradle-api = "8.11.1"
hot-reload-version = "1.0.0-beta05" # AUTO-UPDATED by syncVersions.main.kts - DO NOT RENAME NOR UPDATE HERE
intellij-async-profiler = "3.0-1"
intellij-parsing = "0.3.154"
intellij-platform = "252.25557.178"
intellij-xcodemodel = "241.14980"
junit-jupiter = "5.12.1"
junit-platform = "1.13.4" # AUTO-UPDATED by syncVersions.main.kts - DO NOT RENAME NOR UPDATE HERE
kaml = "0.76.0"
kotlin = "2.2.10" # AUTO-UPDATED by syncVersions.main.kts - DO NOT RENAME NOR UPDATE HERE
kotlinx-collections = "0.3.8" # aligned with IntelliJ platform - UPDATE WITH CARE
kotlinx-coroutines = "1.8.0" # aligned with IntelliJ platform - UPDATE WITH CARE
kotlinx-datetime = "0.7.1"
ksp = "2.2.10-2.0.2" # AUTO-UPDATED by syncVersions.main.kts - DO NOT RENAME NOR UPDATE HERE
ktor = "3.0.3" # aligned with IntelliJ platform - UPDATE WITH CARE
maven = "3.9.9"
maven-resolver = "1.9.22"
mordant = "3.0.1"
opentelemetry = "1.50.0"
slf4j = "2.0.16"
snakeyaml = "2.2"
stacktrace-decoroutinator = "2.4.8"
teamcity-servicemessages = "2024.12"
tinylog = "2.7.0"
xmlutil-serialization = "0.86.2"


# Naming convention: https://blog.gradle.org/best-practices-naming-version-catalog-entries
# We follow this convention with a twist: the group part might consist of multiple segments if several groups are
# related under the same umbrella but use a different version.
# For example, we use intellij-platform-core and intellij-parsing-core as opposed to intellijPlatform-core and
# intellijParsing-core, because the intellij umbrella feels natural but they don't share the same version.
[libraries]
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-tools-builder-model = { module = "com.android.tools.build:builder-model", version.ref= "agp" }
android-tools-common = { module = "com.android.tools:common", version.ref = "android-tools" }
android-tools-ddmlib = { module = "com.android.tools.ddms:ddmlib", version.ref = "android-tools" }
android-tools-sdkCommon = { module = "com.android.tools:sdk-common", version.ref = "android-tools" }
android-tools-sdklib = { module = "com.android.tools:sdklib", version.ref = "android-tools" }
apacheCommons-compress = { module = "org.apache.commons:commons-compress", version.ref = "apache-commons" }
bouncycastle-bcpkix = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncycastle" }
bouncycastle-bcprov = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncycastle" }
charleskorn-kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
clikt-markdown = { module = "com.github.ajalt.clikt:clikt-markdown", version.ref = "clikt" }
google-services-gradle-plugin =  { module = "com.google.gms:google-services", version.ref = "google-services" }
gradle-api =  { module = "dev.gradleplugins:gradle-api", version.ref = "gradle-api" }
gradle-toolingApi = { module = "org.gradle:gradle-tooling-api", version.ref = "gradle-api" }
hot-reload-core = { module = "org.jetbrains.compose.hot-reload:hot-reload-core", version.ref = "hot-reload-version" }
hot-reload-devtools-api = { module = "org.jetbrains.compose.hot-reload:hot-reload-devtools-api", version.ref = "hot-reload-version" }
hot-reload-orchestration = { module = "org.jetbrains.compose.hot-reload:hot-reload-orchestration", version.ref = "hot-reload-version" }
intellij-amper-xcodemodel = { module = "com.jetbrains.intellij.amper:amper-deps-proprietary-xcode-model-squashed", version.ref = "intellij-xcodemodel" }
intellij-deps-asyncProfiler = { module = "org.jetbrains.intellij.deps:async-profiler", version.ref = "intellij-async-profiler" }
intellij-parsing-core = { module = "org.jetbrains:ij-parsing-core", version.ref = "intellij-parsing" }
intellij-platform-core = { module = "com.jetbrains.intellij.platform:core", version.ref = "intellij-platform" }
intellij-platform-coreImpl = { module = "com.jetbrains.intellij.platform:core-impl", version.ref = "intellij-platform" }
intellij-platform-ideCore = { module = "com.jetbrains.intellij.platform:ide-core", version.ref = "intellij-platform" }
intellij-platform-util = { module = "com.jetbrains.intellij.platform:util", version.ref = "intellij-platform" }
intellij-platform-utilEx = { module = "com.jetbrains.intellij.platform:util-ex", version.ref = "intellij-platform" }
intellij-platform-utilJdom = { module = "com.jetbrains.intellij.platform:util-jdom", version.ref = "intellij-platform" }
junit-engine-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-engine-vintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit-jupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }
junit-platform-reporting = { module = "org.junit.platform:junit-platform-reporting", version.ref = "junit-platform" }
kotlin-analysis-api-fir-for-ide = { module = "org.jetbrains.kotlin:low-level-api-fir-for-ide", version.ref = "kotlin" }
kotlin-analysis-api-for-ide = { module = "org.jetbrains.kotlin:analysis-api-for-ide", version.ref = "kotlin" }
kotlin-analysis-api-impl-base-for-ide = { module = "org.jetbrains.kotlin:analysis-api-impl-base-for-ide", version.ref = "kotlin" }
kotlin-analysis-api-k2-for-ide = { module = "org.jetbrains.kotlin:analysis-api-k2-for-ide", version.ref = "kotlin" }
kotlin-analysis-api-platform-interface-for-ide = { module = "org.jetbrains.kotlin:analysis-api-platform-interface-for-ide", version.ref = "kotlin" }
kotlin-analysis-api-standalone-for-ide = { module = "org.jetbrains.kotlin:analysis-api-standalone-for-ide", version.ref = "kotlin" }
kotlin-buildToolsApi = { module = "org.jetbrains.kotlin:kotlin-build-tools-api", version.ref = "kotlin" }
kotlin-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler", version.ref = "kotlin" }
kotlin-compose-compiler-gradle-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-serialization-plugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlin-symbol-light-classes-for-ide = { module = "org.jetbrains.kotlin:symbol-light-classes-for-ide", version.ref = "kotlin" }
kotlinx-collections = { module="org.jetbrains.kotlinx:kotlinx-collections-immutable-jvm", version.ref="kotlinx-collections" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-slf4j = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module="org.jetbrains.kotlinx:kotlinx-datetime", version.ref="kotlinx-datetime" }
ksp-symbolProcessingApi = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ktor-client = { module = "io.ktor:ktor-client", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-sse = { module = "io.ktor:ktor-server-sse", version.ref = "ktor" }
maven-artifact = { module = "org.apache.maven:maven-artifact", version.ref = "maven" }
maven-core = { module = "org.apache.maven:maven-core", version.ref = "maven" }
maven-resolver-connectorBasic = { module = "org.apache.maven.resolver:maven-resolver-connector-basic", version.ref = "maven-resolver" }
maven-resolver-transportHttp = { module = "org.apache.maven.resolver:maven-resolver-transport-http", version.ref = "maven-resolver" }
mordant = { module = "com.github.ajalt.mordant:mordant", version.ref = "mordant" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "opentelemetry" }
opentelemetry-exporterLoggingOtlp = { module = "io.opentelemetry:opentelemetry-exporter-logging-otlp", version.ref = "opentelemetry" }
opentelemetry-kotlin = { module = "io.opentelemetry:opentelemetry-extension-kotlin", version.ref = "opentelemetry" }
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "opentelemetry" }
opentelemetry-sdkTrace = { module = "io.opentelemetry:opentelemetry-sdk-trace", version.ref = "opentelemetry" }
org-eclipse-jgit = { module = "org.eclipse.jgit:org.eclipse.jgit", version.ref = "eclipse-jgit" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
stacktrace-decoroutinator = { module = "dev.reformator.stacktracedecoroutinator:stacktrace-decoroutinator-jvm", version.ref = "stacktrace-decoroutinator" }
teamcity-serviceMessages = { module = "org.jetbrains.teamcity:serviceMessages", version.ref = "teamcity-servicemessages" }
tinylog-api = { module = "org.tinylog:tinylog-api-kotlin", version.ref = "tinylog" }
tinylog-impl = { module = "org.tinylog:tinylog-impl", version.ref = "tinylog" }
tinylog-jul = { module = "org.tinylog:jul-tinylog", version.ref = "tinylog" }
tinylog-slf4j = { module = "org.tinylog:slf4j-tinylog", version.ref = "tinylog" }
xmlutil-serialization = { module = "io.github.pdvrieze.xmlutil:serialization", version.ref = "xmlutil-serialization" }
