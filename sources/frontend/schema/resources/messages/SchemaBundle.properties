android.version.should.be.at.least.min.sdk=Version for {0} ({1}) should be at least minSdk version ({2})
credentials.file.does.not.exist=Credentials file {0} does not exist.
credentials.file.does.not.have.key=Credentials file {0} does not have the key [{1}]. Available keys are: [{2}]
inconsistent.compose.versions=Currently, Compose versions should be the same across all module files. Chosen Compose version is {0}.
compose.version.without.compose=Compose version is specified, but Compose is disabled
no.catalog.value=No catalog value for the key {0}
product.platforms.should.not.be.empty=Product platforms list should not be empty.
product.type.does.not.have.default.platforms=Product type {0} should have its platforms declared explicitly like that:\
  \nproduct:\
  \n  type: {0}\
  \n  platforms: [jvm, iosArm64]
product.type.does.not.have.default.platforms.amperlang=Product type {0} should have its platforms declared explicitly like that:\
  \nproduct '{'\
  \n  type = "{0}"\
  \n  platforms = '{'"jvm", "iosArm64"'}'\
  \n'}'
product.unknown.qualifiers=Unknown qualifiers: [{0}]
product.unknown.context=Unknown context: {0}
product.not.defined=Product type definition is missing
product.unsupported.platform=Product type {0} does not support platform: {1}.\
  \nSupported platforms are: [{2}].
project.module.dir.0.does.not.exist=Module directory "{0}" doesn't exist.
project.module.dir.0.has.no.module.file=Module directory "{0}" has no module file.
too.old.android.version=Android version {0} is too old (should be at least {1})
unknown.property.type=Unknown {0}: {1}
unknown.property.type.long=Unknown {0}: {1}. Should be one of {2}
unexpected.product.node.type=Unexpected product node type: {0}
wrong.node.type=[{0}] field has a wrong type: It is {1}, but was expected to be {2}
